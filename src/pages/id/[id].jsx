import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback } from "react";
import { fetcher } from "src/utils/fetcher";
import useSWR from "swr";

function Character() {
  const route = useRouter();
  const { data, error } = useSWR(
    route.query.id
      ? `https://akabab.github.io/starwars-api/api/id/${route.query.id}.json`
      : null,
    fetcher
  );
  const locations = [data?.bornLocation, data?.diedLocation, data?.homeworld];
  const updateLocations = useCallback((value, index, self) => {
    return self.indexOf(value) === index;
  }, []);
  console.log(route.query.id);
  console.log({ data, error });
  return (
    <div className="bg-starwars-color flex flex-col mt-[170px] pt-[20px] mx-auto justify-center w-[calc(100%-400px)]">
      <Head>
        <title>{data?.name} | StarWars.com</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex w-full my-[60px] bg-character-color">
        <img
          className="w-3/5 h-[1000px] object-cover"
          src={data?.image}
          alt=""
        />
        <div className="border-l-2 border-blue-300 text-white px-[15px] py-[20px]">
          <h1 className="text-3xl tracking-wider">{data?.name}</h1>
          <h4 className="text-xl mt-[20px]">
            {data?.affiliations?.length > 0 ? "AFFILIATIONS" : null}
          </h4>
          <ul>
            {data?.affiliations?.map((affiliation, index) => (
              <li className="text-sm mt-[5px]" key={index}>
                {affiliation}
              </li>
            ))}
          </ul>
          <h4 className="text-xl mt-[20px]">
            {data?.apprentices?.length > 0 ? "APPRENTICES" : null}
          </h4>
          <ul>
            {data?.apprentices?.map((apprentice, index) => (
              <li className="text-sm mt-[5px]" key={index}>
                {apprentice}
              </li>
            ))}
          </ul>
          <h4 className="text-xl mt-[20px]">
            {(data?.bornLocation && "LOCATIONS") ||
              (data?.diedLocation && "LOCATIONS") ||
              (data?.homeworld && "LOCATIONS")}
          </h4>
          {locations.filter(updateLocations).map((location) => (
            <p className="text-sm mt-[5px]">{location !== "" && location}</p>
          ))}
          <h4 className="text-xl mt-[20px]">GENDER</h4>
          <span className="text-sm mt-[5px]">{data?.gender}</span>
          <h4 className="text-xl mt-[20px]">DIMENSIONS</h4>
          <span className="text-sm mt-[5px]">Height: {data?.dimensions}m</span>
          <h4 className="text-xl mt-[20px]">SPECIES</h4>
          <span className="text-sm mt-[5px]">{data?.species}</span>
          <h4 className="text-xl mt-[20px]">WIKI</h4>
          <a href={data?.wiki} target="_blank" rel="noreferrer">
            Read more about {data?.name}
          </a>
        </div>
      </div>
      <div className="z-0 w-[200px] h-screen fixed left-0 top-0 block bg-repeat-y bg-[url('https://static-mh.content.disney.io/starwars/assets/background/bg_starsL-fd4661a3ccea.jpg')]"></div>
      <div className="z-0 w-[200px] h-screen fixed right-0 top-0 block bg-repeat-y bg-[url('https://static-mh.content.disney.io/starwars/assets/background/bg_starsR-655c85e404d4.jpg')]"></div>
    </div>
  );
}

export default Character;
